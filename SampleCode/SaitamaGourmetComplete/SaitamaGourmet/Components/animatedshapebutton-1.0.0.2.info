{"Name":"Animated Shape Button","Id":2974,"Alias":"animatedshapebutton","Description":"\n\u003ciframe src=\"https://appetize.io/embed/cy49x2qpny1xrmb6vd8vudkj4w?device=iphone5s\u0026scale=75\u0026autoplay=true\u0026orientation=portrait\u0026deviceColor=black\" \n        width=\"274px\" height=\"587px\" frameborder=\"0\" scrolling=\"no\"\n        style=\"float:right;margin-left:1em;\"\u003e\u0026nbsp;\u003c/iframe\u003e\n\nAnimated Shape Button is an animated `UIControl` that has a beautifle animated image mask between its checked\nand unchecked states.\n\n##  Using AnimatedShapeButton\n\n`AnimatedShapeButton` can be used in both storyboards and code-behind. Once instantiated, it can be used\nin a check box manner:\n\n    var frame = new CGRect(0, 0, 140, 140);\n    var button = new AnimatedShapeButton(frame);\n    \n    // wait for events\n    button.CheckedChanged += (sender, e) =\u003e {\n        var isChecked = button.Checked;\n    };\n    \n    // set the state programatically\n    button.Checked = true;\n\n## Using Properties\n\n`AnimatedShapeButton` is fully supported in storyboards and in the storyboard designer. \nThere are several properties that are available in the designer:\n\n  * `Image`  \n    The mask (transparent png) image used to provide the shape\n    \n  * `Color`  \n    The color of the checked state\n    \n  * `SkeletonColor`  \n    The color of the state that is available\n    \n  * `CircleColor`  \n    The color of the circle wave around the shape during the animation\n    \n  * `LinesColor`  \n    The color of the little explosion lines during the animation\n    \n  * `Duration`  \n    The value representing the animation duration/speed\n    \n## Using Events\n\nAlong with the various properties, there is support for listening to state changes through events:\n    \n  * `CheckedChanged`  \n    The event that is raised when the checked state changes\n","Version":"1.0.0.2","Summary":"The Animated Shape Button is an animated UIControl, that has a beautiful animated image mask between its checked and unchecked states","QuickStart":"\nAnimated Shape Button is an animated `UIControl` that has a beautifle animated image mask between its checked\nand unchecked states.\n\n##  Using AnimatedShapeButton\n\n`AnimatedShapeButton` can be used in both storyboards and code-behind. Once instantiated, it can be used\nin a check box manner:\n\n    var frame = new CGRect(0, 0, 140, 140);\n    var button = new AnimatedShapeButton(frame);\n    \n    // wait for events\n    button.CheckedChanged += (sender, e) =\u003e {\n        var isChecked = button.Checked;\n    };\n    \n    // set the state programatically\n    button.Checked = true;\n\n## Using Properties\n\n`AnimatedShapeButton` is fully supported in storyboards and in the storyboard designer. \nThere are several properties that are available in the designer:\n\n  * `Image`  \n    The mask (transparent png) image used to provide the shape\n    \n  * `Color`  \n    The color of the checked state\n    \n  * `SkeletonColor`  \n    The color of the state that is available\n    \n  * `CircleColor`  \n    The color of the circle wave around the shape during the animation\n    \n  * `LinesColor`  \n    The color of the little explosion lines during the animation\n    \n  * `Duration`  \n    The value representing the animation duration/speed\n    \n## Using Events\n\nAlong with the various properties, there is support for listening to state changes through events:\n    \n  * `CheckedChanged`  \n    The event that is raised when the checked state changes\n","Hash":"c2d83f45c9f822dc3d189b32f726360d","TargetPlatforms":["ios","ios-unified"],"TrialHash":null}